{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyDesktop\\\\enotes frontend - Copy\\\\src\\\\Components\\\\Decription.js\";\nimport React from \"react\";\nexport default class Decription extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const textareaLineHeight = 24;\n      const {\n        minRows,\n        maxRows\n      } = this.state;\n      const previousRows = event.target.rows;\n      event.target.rows = minRows; // reset number of rows in textarea \n\n      const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n\n      if (currentRows === previousRows) {\n        event.target.rows = currentRows;\n      }\n\n      if (currentRows >= maxRows) {\n        event.target.rows = maxRows;\n        event.target.scrollTop = event.target.scrollHeight;\n      }\n\n      this.setState({\n        value: event.target.value,\n        rows: currentRows < maxRows ? currentRows : maxRows\n      });\n    };\n\n    this.state = {\n      value: '',\n      rows: 5,\n      minRows: 5,\n      maxRows: 999\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: this.state.rows,\n      value: this.state.value,\n      placeholder: 'Enter your text here...',\n      className: 'textarea',\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/MyDesktop/enotes frontend - Copy/src/Components/Decription.js"],"names":["React","Decription","PureComponent","constructor","props","handleChange","event","textareaLineHeight","minRows","maxRows","state","previousRows","target","rows","currentRows","scrollHeight","scrollTop","setState","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,aAA/B,CAA6C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAUnBC,YAVmB,GAUHC,KAAD,IAAW;AACzB,YAAMC,kBAAkB,GAAG,EAA3B;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuB,KAAKC,KAAlC;AAEA,YAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAlC;AACCP,MAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBL,OAApB,CALwB,CAKK;;AAE9B,YAAMM,WAAW,GAAG,CAAC,EAAER,KAAK,CAACM,MAAN,CAAaG,YAAb,GAA4BR,kBAA9B,CAArB;;AAEE,UAAIO,WAAW,KAAKH,YAApB,EAAkC;AACjCL,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBC,WAApB;AACA;;AAEH,UAAIA,WAAW,IAAIL,OAAnB,EAA4B;AAC3BH,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBJ,OAApB;AACAH,QAAAA,KAAK,CAACM,MAAN,CAAaI,SAAb,GAAyBV,KAAK,CAACM,MAAN,CAAaG,YAAtC;AACA;;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEZ,KAAK,CAACM,MAAN,CAAaM,KADR;AAEXL,QAAAA,IAAI,EAAEC,WAAW,GAAGL,OAAd,GAAwBK,WAAxB,GAAsCL;AAFjC,OAAd;AAID,KAhCkB;;AAElB,SAAKC,KAAL,GAAa;AACZQ,MAAAA,KAAK,EAAE,EADK;AAEZL,MAAAA,IAAI,EAAE,CAFM;AAGZL,MAAAA,OAAO,EAAE,CAHG;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAAb;AAMA;;AA0BDU,EAAAA,MAAM,GAAG;AACR,wBACC;AACC,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,IADlB;AAEC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,KAFnB;AAGC,MAAA,WAAW,EAAE,yBAHd;AAIC,MAAA,SAAS,EAAE,UAJZ;AAKC,MAAA,QAAQ,EAAE,KAAKb,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AASA;;AA7C0D","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default class Decription extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: '',\r\n\t\t\trows: 5,\r\n\t\t\tminRows: 5,\r\n\t\t\tmaxRows: 999,\r\n\t\t};\r\n\t}\r\n\t\r\n\thandleChange = (event) => {\r\n\t\tconst textareaLineHeight = 24;\r\n\t\tconst { minRows, maxRows } = this.state;\r\n\t\t\r\n\t\tconst previousRows = event.target.rows;\r\n  \tevent.target.rows = minRows; // reset number of rows in textarea \r\n\t\t\r\n\t\tconst currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\r\n    \r\n    if (currentRows === previousRows) {\r\n    \tevent.target.rows = currentRows;\r\n    }\r\n\t\t\r\n\t\tif (currentRows >= maxRows) {\r\n\t\t\tevent.target.rows = maxRows;\r\n\t\t\tevent.target.scrollTop = event.target.scrollHeight;\r\n\t\t}\r\n    \r\n  \tthis.setState({\r\n    \tvalue: event.target.value,\r\n      rows: currentRows < maxRows ? currentRows : maxRows,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<textarea\r\n\t\t\t\trows={this.state.rows}\r\n\t\t\t\tvalue={this.state.value}\r\n\t\t\t\tplaceholder={'Enter your text here...'}\r\n\t\t\t\tclassName={'textarea'}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}